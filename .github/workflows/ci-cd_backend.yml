# name: Backend CI/CD

# on:
#   pull_request:
#     branches:
#       - main
#       - develop
#     paths:
#       - 'backend/**' 

# # デフォルトの作業ディレクトリ変更
# defaults:
#   run:
#     working-directory: backend
    
# jobs:
#   # 静的解析
#   Lint:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         node-version: ['23.x'] # 使用するNode.jsのバージョンを定義
#     # GitHub Actionsの権限設定
#     permissions:
#       contents: read
#       pull-requests: write
#     steps:
#     # リポジトリからソースコードの取得
#       - name: Checkout Repository
#         uses: actions/checkout@v4
    
#     # Node.jsのセットアップ
#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v4
#         with:
#           node-version: ${{ matrix.node-version }}
#           # npmのキャッシュを使用する設定
#           cache: "npm"
#           # ルート直下の場合は「./package-lock.json」に変更
#           cache-dependency-path: ./backend/package-lock.json
     
#       # プロジェクトの依存関係をインストール
#       - name: Install Dependencies
#         run: npm ci

#       # Reviewdogがその結果をGitHubのPR上にコメントとして表示
#       - name: Run ESLint Reviewdog
#         uses: reviewdog/action-eslint@v1
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           reporter: github-pr-review
#           eslint_flags: "src/**/*.{ts,tsx}"
#           # ルート直下の場合は不要
#           workdir: backend/

#   # Backend 単体テスト（Todo: 各機能実装時に有効化）
#   # 各モジュールに書いたspec または test をファイル名に含むテストファイルが実行される.詳細はjest.config.tsを参照
#   UnitTest:
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: backend
#     needs: Lint
#     strategy:
#       matrix:
#         node-version: ['23.x']
#     permissions:
#       contents: read
#     steps:
#       - uses: actions/checkout@v4
#       - uses: actions/setup-node@v4
#         with:
#           node-version: ${{ matrix.node-version }}
#           cache: "npm"
#           cache-dependency-path: ./backend/package-lock.json
#       - run: npm ci
#       - run: npm test # Jestが「*.spec.ts」を自動実行

#   # Backend ビルド
#   Build:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#     needs: UnitTest
#     strategy:
#       matrix:
#         node-version: ['23.x']
#     steps:
#       - uses: actions/checkout@v4
#       - uses: actions/setup-node@v4
#         with:
#           node-version: ${{ matrix.node-version }}
#           cache: "npm"
#           cache-dependency-path: ./backend/package-lock.json
#       - run: npm ci
#       - run: npm run build

  # E2Eテスト（Todo）
  # e2eを含むテストファイルが実行される.詳細はjest.e2e.tsを参照
  # E2ETest:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: backend
  #   needs: Build
  #   strategy:
  #     matrix:
  #       node-version: ['23.x']
  #   permissions:
  #     contents: read
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         cache: "npm"
  #         cache-dependency-path: ./backend/package-lock.json
  #     - run: npm ci
  #     - run: npm run test:e2e